/// @file include-private/xed-ild-eosz.h

// This file was automatically generated.
// Do not edit this file.

#if !defined(INCLUDE_PRIVATE_XED_ILD_EOSZ_H)
# define INCLUDE_PRIVATE_XED_ILD_EOSZ_H
/*BEGIN_LEGAL

Copyright (c) 2021 Intel Corporation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  
END_LEGAL */
#include "xed-internal-header.h"
void xed_lookup_function_init_OSZ_NONTERM_EOSZ(void);

void xed_lookup_function_init_OSZ_NONTERM_CR_WIDTH_EOSZ(void);

void xed_lookup_function_init_OSZ_NONTERM_DF64_EOSZ(void);

void xed_lookup_function_init_OSZ_NONTERM_DF64_FORCE64_EOSZ(void);

void xed_lookup_function_init_OSZ_NONTERM_DF64_IMMUNE66_LOOP64_EOSZ(void);

void xed_lookup_function_init_OSZ_NONTERM_FORCE64_EOSZ(void);

void xed_lookup_function_init_OSZ_NONTERM_IGNORE66_EOSZ(void);

void xed_lookup_function_init_OSZ_NONTERM_IMMUNE66_EOSZ(void);

void xed_lookup_function_init_OSZ_NONTERM_IMMUNE_REXW_EOSZ(void);

void xed_lookup_function_init_OSZ_NONTERM_REFINING66_EOSZ(void);

void xed_lookup_function_init_OSZ_NONTERM_REFINING66_CR_WIDTH_EOSZ(void);

/*Array declaration*/
extern xed_bits_t xed_lookup_OSZ_NONTERM_EOSZ[3][2][2];

/*Lookup function*/
static XED_INLINE xed_bits_t xed_lookup_function_OSZ_NONTERM_EOSZ(xed_bits_t arg_MODE, xed_bits_t arg_OSZ, xed_bits_t arg_REXW)
{
xed_bits_t _v;
xed_assert(arg_MODE>=0 && arg_MODE<3);
xed_assert(arg_OSZ>=0 && arg_OSZ<2);
xed_assert(arg_REXW>=0 && arg_REXW<2);
_v=xed_lookup_OSZ_NONTERM_EOSZ[arg_MODE][arg_OSZ][arg_REXW];
return _v;
}
/*Array declaration*/
extern xed_bits_t xed_lookup_OSZ_NONTERM_CR_WIDTH_EOSZ[3][2][2];

/*Lookup function*/
static XED_INLINE xed_bits_t xed_lookup_function_OSZ_NONTERM_CR_WIDTH_EOSZ(xed_bits_t arg_MODE, xed_bits_t arg_OSZ, xed_bits_t arg_REXW)
{
xed_bits_t _v;
xed_assert(arg_MODE>=0 && arg_MODE<3);
xed_assert(arg_OSZ>=0 && arg_OSZ<2);
xed_assert(arg_REXW>=0 && arg_REXW<2);
_v=xed_lookup_OSZ_NONTERM_CR_WIDTH_EOSZ[arg_MODE][arg_OSZ][arg_REXW];
return _v;
}
/*Array declaration*/
extern xed_bits_t xed_lookup_OSZ_NONTERM_DF64_EOSZ[3][2][2];

/*Lookup function*/
static XED_INLINE xed_bits_t xed_lookup_function_OSZ_NONTERM_DF64_EOSZ(xed_bits_t arg_MODE, xed_bits_t arg_OSZ, xed_bits_t arg_REXW)
{
xed_bits_t _v;
xed_assert(arg_MODE>=0 && arg_MODE<3);
xed_assert(arg_OSZ>=0 && arg_OSZ<2);
xed_assert(arg_REXW>=0 && arg_REXW<2);
_v=xed_lookup_OSZ_NONTERM_DF64_EOSZ[arg_MODE][arg_OSZ][arg_REXW];
return _v;
}
/*Array declaration*/
extern xed_bits_t xed_lookup_OSZ_NONTERM_DF64_FORCE64_EOSZ[3][2][2];

/*Lookup function*/
static XED_INLINE xed_bits_t xed_lookup_function_OSZ_NONTERM_DF64_FORCE64_EOSZ(xed_bits_t arg_MODE, xed_bits_t arg_OSZ, xed_bits_t arg_REXW)
{
xed_bits_t _v;
xed_assert(arg_MODE>=0 && arg_MODE<3);
xed_assert(arg_OSZ>=0 && arg_OSZ<2);
xed_assert(arg_REXW>=0 && arg_REXW<2);
_v=xed_lookup_OSZ_NONTERM_DF64_FORCE64_EOSZ[arg_MODE][arg_OSZ][arg_REXW];
return _v;
}
/*Array declaration*/
extern xed_bits_t xed_lookup_OSZ_NONTERM_DF64_IMMUNE66_LOOP64_EOSZ[3][2][2];

/*Lookup function*/
static XED_INLINE xed_bits_t xed_lookup_function_OSZ_NONTERM_DF64_IMMUNE66_LOOP64_EOSZ(xed_bits_t arg_MODE, xed_bits_t arg_OSZ, xed_bits_t arg_REXW)
{
xed_bits_t _v;
xed_assert(arg_MODE>=0 && arg_MODE<3);
xed_assert(arg_OSZ>=0 && arg_OSZ<2);
xed_assert(arg_REXW>=0 && arg_REXW<2);
_v=xed_lookup_OSZ_NONTERM_DF64_IMMUNE66_LOOP64_EOSZ[arg_MODE][arg_OSZ][arg_REXW];
return _v;
}
/*Array declaration*/
extern xed_bits_t xed_lookup_OSZ_NONTERM_FORCE64_EOSZ[3][2][2];

/*Lookup function*/
static XED_INLINE xed_bits_t xed_lookup_function_OSZ_NONTERM_FORCE64_EOSZ(xed_bits_t arg_MODE, xed_bits_t arg_OSZ, xed_bits_t arg_REXW)
{
xed_bits_t _v;
xed_assert(arg_MODE>=0 && arg_MODE<3);
xed_assert(arg_OSZ>=0 && arg_OSZ<2);
xed_assert(arg_REXW>=0 && arg_REXW<2);
_v=xed_lookup_OSZ_NONTERM_FORCE64_EOSZ[arg_MODE][arg_OSZ][arg_REXW];
return _v;
}
/*Array declaration*/
extern xed_bits_t xed_lookup_OSZ_NONTERM_IGNORE66_EOSZ[3][2][2];

/*Lookup function*/
static XED_INLINE xed_bits_t xed_lookup_function_OSZ_NONTERM_IGNORE66_EOSZ(xed_bits_t arg_MODE, xed_bits_t arg_OSZ, xed_bits_t arg_REXW)
{
xed_bits_t _v;
xed_assert(arg_MODE>=0 && arg_MODE<3);
xed_assert(arg_OSZ>=0 && arg_OSZ<2);
xed_assert(arg_REXW>=0 && arg_REXW<2);
_v=xed_lookup_OSZ_NONTERM_IGNORE66_EOSZ[arg_MODE][arg_OSZ][arg_REXW];
return _v;
}
/*Array declaration*/
extern xed_bits_t xed_lookup_OSZ_NONTERM_IMMUNE66_EOSZ[3][2][2];

/*Lookup function*/
static XED_INLINE xed_bits_t xed_lookup_function_OSZ_NONTERM_IMMUNE66_EOSZ(xed_bits_t arg_MODE, xed_bits_t arg_OSZ, xed_bits_t arg_REXW)
{
xed_bits_t _v;
xed_assert(arg_MODE>=0 && arg_MODE<3);
xed_assert(arg_OSZ>=0 && arg_OSZ<2);
xed_assert(arg_REXW>=0 && arg_REXW<2);
_v=xed_lookup_OSZ_NONTERM_IMMUNE66_EOSZ[arg_MODE][arg_OSZ][arg_REXW];
return _v;
}
/*Array declaration*/
extern xed_bits_t xed_lookup_OSZ_NONTERM_IMMUNE_REXW_EOSZ[3][2][2];

/*Lookup function*/
static XED_INLINE xed_bits_t xed_lookup_function_OSZ_NONTERM_IMMUNE_REXW_EOSZ(xed_bits_t arg_MODE, xed_bits_t arg_OSZ, xed_bits_t arg_REXW)
{
xed_bits_t _v;
xed_assert(arg_MODE>=0 && arg_MODE<3);
xed_assert(arg_OSZ>=0 && arg_OSZ<2);
xed_assert(arg_REXW>=0 && arg_REXW<2);
_v=xed_lookup_OSZ_NONTERM_IMMUNE_REXW_EOSZ[arg_MODE][arg_OSZ][arg_REXW];
return _v;
}
/*Array declaration*/
extern xed_bits_t xed_lookup_OSZ_NONTERM_REFINING66_EOSZ[3][2][2];

/*Lookup function*/
static XED_INLINE xed_bits_t xed_lookup_function_OSZ_NONTERM_REFINING66_EOSZ(xed_bits_t arg_MODE, xed_bits_t arg_OSZ, xed_bits_t arg_REXW)
{
xed_bits_t _v;
xed_assert(arg_MODE>=0 && arg_MODE<3);
xed_assert(arg_OSZ>=0 && arg_OSZ<2);
xed_assert(arg_REXW>=0 && arg_REXW<2);
_v=xed_lookup_OSZ_NONTERM_REFINING66_EOSZ[arg_MODE][arg_OSZ][arg_REXW];
return _v;
}
/*Array declaration*/
extern xed_bits_t xed_lookup_OSZ_NONTERM_REFINING66_CR_WIDTH_EOSZ[3][2][2];

/*Lookup function*/
static XED_INLINE xed_bits_t xed_lookup_function_OSZ_NONTERM_REFINING66_CR_WIDTH_EOSZ(xed_bits_t arg_MODE, xed_bits_t arg_OSZ, xed_bits_t arg_REXW)
{
xed_bits_t _v;
xed_assert(arg_MODE>=0 && arg_MODE<3);
xed_assert(arg_OSZ>=0 && arg_OSZ<2);
xed_assert(arg_REXW>=0 && arg_REXW<2);
_v=xed_lookup_OSZ_NONTERM_REFINING66_CR_WIDTH_EOSZ[arg_MODE][arg_OSZ][arg_REXW];
return _v;
}
void xed_ild_eosz_init(void);

#endif
